{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tamil11021991"
		},
		"LS_Azure_SQLDB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Azure_SQLDB'"
		},
		"ls_dev_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_dev_adls'"
		},
		"LS_Azure_SQLDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "tamil11021991.database.windows.net"
		},
		"LS_Azure_SQLDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "tamil11021991db"
		},
		"LS_Azure_SQLDB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "tamil"
		},
		"ls_azuresqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "tamil11021991.database.windows.net"
		},
		"ls_azuresqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().ls_pr_databasename}"
		},
		"ls_azuresqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().ls_pr_username}"
		},
		"ls_dev_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://thamizhdevadlssa.dfs.core.windows.net/"
		},
		"TR_Copy_file_properties_Copy_file_parameters_SourcePath": {
			"type": "string",
			"defaultValue": "landing/sample"
		},
		"TR_Copy_file_properties_Copy_file_parameters_DestinationPath": {
			"type": "string",
			"defaultValue": "landing/output"
		},
		"TR_Copy_file_properties_Copy_file_parameters_Source_filename": {
			"type": "string",
			"defaultValue": "sample.txt"
		},
		"TR_copy_file_in_folder_properties_Copy_file_in_folder_parameters_PR_sourcepath": {
			"type": "string",
			"defaultValue": "landing/sample"
		},
		"TR_copy_file_in_folder_properties_Copy_file_in_folder_parameters_PR_destinationpath": {
			"type": "string",
			"defaultValue": "landing/output"
		},
		"TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_Deletetime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_Databasename": {
			"type": "string",
			"defaultValue": "tamil11021991db"
		},
		"TR_on_blob_create_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3aea52c1-30dd-4e3b-b526-06e19cd1a6a1/resourceGroups/ADE-DEV/providers/Microsoft.Storage/storageAccounts/thamizhdevadlssa"
		},
		"TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_Deletetime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_Databasename": {
			"type": "string",
			"defaultValue": "tamil11021991db"
		},
		"TR_on_blob_delete_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3aea52c1-30dd-4e3b-b526-06e19cd1a6a1/resourceGroups/ADE-DEV/providers/Microsoft.Storage/storageAccounts/thamizhdevadlssa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Customer_CSV_To_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Customer_CSV_To_Folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "CSV"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "CSV2"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T14:15:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Customer_To_CSV_PipeDelimited')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Customer_To_CSV_PipeDelimited",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_PipeDelimited_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "CSV_Pipe"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T14:31:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_PipeDelimited_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Customer_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Customer_To_JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_JSON_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "JSON"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T14:00:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_JSON_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_ProductTable_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ProductTable_To_CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "SalesLT",
									"TableName": "Product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "CSV"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-02T14:00:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Table_to_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"description": "copy data from azure sql db to a json file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.pr_schemaname}.@{pipeline().parameters.pr_tablename}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.pr_destination_folder}//@{pipeline().parameters.pr_tablename}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_dev_adls",
										"type": "LinkedServiceReference"
									},
									"path": "landing/log"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['CustomerID']"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"path": "$['Title']"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"path": "$['FirstName']"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String"
										},
										"sink": {
											"path": "$['MiddleName']"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"path": "$['LastName']"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String"
										},
										"sink": {
											"path": "$['Suffix']"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"path": "$['CompanyName']"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String"
										},
										"sink": {
											"path": "$['SalesPerson']"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String"
										},
										"sink": {
											"path": "$['EmailAddress']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_table",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_schemaname": {
										"value": "@pipeline().parameters.pr_schemaname",
										"type": "Expression"
									},
									"ds_pr_tablename": {
										"value": "@pipeline().parameters.pr_tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dest_json",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_folder": {
										"value": "@pipeline().parameters.pr_destination_folder",
										"type": "Expression"
									},
									"ds_pr_filename": {
										"value": "@concat(pipeline().parameters.pr_tablename,formatDateTime(utcNow(), 'yyyy-dd-MM'),'.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pr_database": {
						"type": "string",
						"defaultValue": "tamil11021991db"
					},
					"pr_destination_folder": {
						"type": "string",
						"defaultValue": "landing/sample"
					},
					"pr_tablename": {
						"type": "string",
						"defaultValue": "customer"
					},
					"pr_schemaname": {
						"type": "string",
						"defaultValue": "salesLT"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T06:06:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_dest_json')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy a file from source path to destination path in ADLS",
				"activities": [
					{
						"name": "Copy File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SourcePath}//@{pipeline().parameters.Source_filename}"
							},
							{
								"name": "Destination",
								"value": "@{pipeline().parameters.DestinationPath}//@{pipeline().parameters.Source_filename}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FilePath",
										"value": "$$FILENAME"
									},
									{
										"name": "TimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Column1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"name": "Column2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TimeStamp",
											"type": "String"
										},
										"sink": {
											"name": "Column3",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_delimitedtext",
								"type": "DatasetReference",
								"parameters": {
									"source_path": {
										"value": "@pipeline().parameters.SourcePath",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.Source_filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dest_delimitedtext",
								"type": "DatasetReference",
								"parameters": {
									"dest_path": {
										"value": "@pipeline().parameters.DestinationPath",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourcePath": {
						"type": "string",
						"defaultValue": "landing/sample"
					},
					"DestinationPath": {
						"type": "string",
						"defaultValue": "landing/output"
					},
					"Source_filename": {
						"type": "string",
						"defaultValue": "Employee_Dept.txt"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T14:37:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_delimitedtext')]",
				"[concat(variables('factoryId'), '/datasets/ds_dest_delimitedtext')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_file_in_folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy all the files in a folder to the destination folder",
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Get the Metadata information of the folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sourefolder",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_folderpath": {
										"value": "@pipeline().parameters.PR_sourcepath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"description": "Iterate over the folder child items",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy_file",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourcePath": {
												"value": "@pipeline().parameters.PR_sourcepath",
												"type": "Expression"
											},
											"DestinationPath": {
												"value": "@pipeline().parameters.PR_destinationpath",
												"type": "Expression"
											},
											"Source_filename": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PR_sourcepath": {
						"type": "string",
						"defaultValue": "landing/sample"
					},
					"PR_destinationpath": {
						"type": "string",
						"defaultValue": "landing/output"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T08:33:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourefolder')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_multipleTable_to_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'SalesLT' and TABLE_NAME <> 'ProductModel'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_table",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_schemaname": "salesLT",
									"ds_pr_tablename": "customer"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copy_table_to_file",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"TableList": {
									"value": "@activity('Lookup1').output.value",
									"type": "Expression"
								},
								"FilePath": {
									"value": "@pipeline().parameters.Filepath",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Filepath": {
						"type": "string",
						"defaultValue": "landing/output"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T06:34:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_table')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_table_to_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_table_to_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_table",
											"type": "DatasetReference",
											"parameters": {
												"ds_pr_schemaname": "salesLT",
												"ds_pr_tablename": "customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_delimitedtext",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": {
													"value": "@pipeline().parameters.FilePath",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableList": {
						"type": "array"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T06:15:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_delimitedtext')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Person_ErrorHandling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Person",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T10:16:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Person')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteFile_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "Customer"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_dev_adls",
									"type": "LinkedServiceReference"
								},
								"path": "landing/log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T08:02:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select s.name as schemaname,t.name as tablename from sys.tables t\ninner join sys.schemas s on t.schema_id=s.schema_id \nwhere t.name like 'customer%'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "address"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline",
									"description": "Foreach_Example_Table_ADLS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Foreach_Example_Table_ADLS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SchemaName": {
												"value": "@item().schemaname",
												"type": "Expression"
											},
											"TableName": {
												"value": "@item().tablename",
												"type": "Expression"
											},
											"Directory": {
												"value": "@item().tablename",
												"type": "Expression"
											},
											"FileName": {
												"value": "@concat(item().schemaname,item().tablename, formatDateTime(utcNow()),'.csv')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T14:13:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/pipelines/Foreach_Example_Table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Customer",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from salesLT.@{pipeline().parameters.SourceTable}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "SalesLT",
									"TableName": "Customer"
								}
							}
						}
					},
					{
						"name": "If Condition check count greater than 100",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup Customer').output.firstRow.cnt,100)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "if object_Id('salesLT.@{pipeline().parameters.Copy_Table}') is not null\nTruncate table salesLT.@{pipeline().parameters.Copy_Table}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": {
													"value": "@pipeline().parameters.Copy_Table",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "Customer"
					},
					"Copy_Table": {
						"type": "string",
						"defaultValue": "Customer_Copy"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T06:52:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_Table_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data for each table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.SchemaName}.@{pipeline().parameters.TableName}"
							},
							{
								"name": "Destination",
								"value": "landing/@{pipeline().parameters.Directory}/@{pipeline().parameters.FileName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_Dest_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T14:13:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_Dest_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataActivity_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get the Filename and filesize to a txt file",
				"activities": [
					{
						"name": "Get Metadata of Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "sample"
								}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of Folder').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable Itemname",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Itemname",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable Itemtype",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable Itemname",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Itemtype",
										"value": {
											"value": "@item().type",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Script1",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Set variable Itemtype",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "ls_azuresqldb",
										"type": "LinkedServiceReference",
										"parameters": {
											"ls_pr_databasename": "tamil11021991db",
											"ls_pr_username": "tamil",
											"ls_pr_password": "MayFlower@2024"
										}
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "insert into File_info(Itemname,ItemType) values ('@{variables('Itemname')}','@{variables('Itemtype')}')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Itemname": {
						"type": "String"
					},
					"Itemtype": {
						"type": "String"
					},
					"IsExists": {
						"type": "Boolean"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-05T06:59:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadataActivity_Recursively')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Get the list of  files and folders in a mentioned path",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Directory",
								"value": "@if(empty(variables('Path')),@{variables('Directory')},@{variables('Path')})"
							}
						],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@if(empty(variables('Path')), first(variables('Directory')),variables('Path'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach Items in folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition check on type",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [
										{
											"name": "Name",
											"value": "@{item().name}"
										},
										{
											"name": "Type",
											"value": "@{item().type}"
										}
									],
									"typeProperties": {
										"expression": {
											"value": "@equals( item().type ,'Folder')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set variable",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "FileName",
														"value": "@item().name"
													}
												],
												"typeProperties": {
													"variableName": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Append variable Directory",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [
													{
														"name": "FolderPath",
														"value": "@{variables('Directory')}"
													}
												],
												"typeProperties": {
													"variableName": "Directory",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable Path",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Append variable Directory",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Directory",
														"value": "@{variables('Directory')}"
													}
												],
												"typeProperties": {
													"variableName": "Path",
													"value": {
														"value": "@join(variables('Directory'),'/')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Directory": {
						"type": "Array",
						"defaultValue": [
							"Customer"
						]
					},
					"Filename": {
						"type": "String"
					},
					"Path": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-05T09:36:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadata_Folder_count')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get the folder and their file count",
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_Blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'Folder')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter2",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLS_CSV_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Filter3",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata2').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@equals( item().name,'Folder' )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Filter4",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata2').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@equals( item().name,'File' )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ForEach2",
									"type": "ForEach",
									"dependsOn": [
										{
											"activity": "Filter3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Filter3').output.value",
											"type": "Expression"
										},
										"activities": [
											{
												"name": "Get Metadata3",
												"type": "GetMetadata",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ADLS_CSV_Generic_DS",
														"type": "DatasetReference",
														"parameters": {
															"Directory": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"fieldList": [
														"childItems"
													],
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												}
											},
											{
												"name": "Filter5",
												"type": "Filter",
												"dependsOn": [
													{
														"activity": "Get Metadata3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"items": {
														"value": "@activity('Get Metadata3').output.childItems",
														"type": "Expression"
													},
													"condition": {
														"value": "@equals( item().name,'Folder' )",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Filter6",
												"type": "Filter",
												"dependsOn": [
													{
														"activity": "Get Metadata3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"items": {
														"value": "@activity('Get Metadata3').output.childItems",
														"type": "Expression"
													},
													"condition": {
														"value": "@equals( item().name,'File' )",
														"type": "Expression"
													}
												}
											},
											{
												"name": "ForEach3",
												"type": "ForEach",
												"dependsOn": [
													{
														"activity": "Filter5",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"items": {
														"value": "@activity('Filter5').output.value",
														"type": "Expression"
													},
													"activities": [
														{
															"name": "Get Metadata4",
															"type": "GetMetadata",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"dataset": {
																	"referenceName": "ADLS_CSV_Generic_DS",
																	"type": "DatasetReference",
																	"parameters": {
																		"Directory": {
																			"value": "@item().name",
																			"type": "Expression"
																		}
																	}
																},
																"fieldList": [
																	"childItems"
																],
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															}
														},
														{
															"name": "Filter7",
															"type": "Filter",
															"dependsOn": [
																{
																	"activity": "Get Metadata4",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"items": {
																	"value": "@activity('Get Metadata4').output.childItems",
																	"type": "Expression"
																},
																"condition": {
																	"value": "@equals( item().name,'Folder' )",
																	"type": "Expression"
																}
															}
														},
														{
															"name": "Filter8",
															"type": "Filter",
															"dependsOn": [
																{
																	"activity": "Get Metadata4",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"items": {
																	"value": "@activity('Get Metadata4').output.childItems",
																	"type": "Expression"
																},
																"condition": {
																	"value": "@equals( item().name,'File' )",
																	"type": "Expression"
																}
															}
														},
														{
															"name": "ForEach4",
															"type": "ForEach",
															"dependsOn": [
																{
																	"activity": "Filter7",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"userProperties": [],
															"typeProperties": {
																"items": {
																	"value": "@activity('Filter7').output.value",
																	"type": "Expression"
																},
																"activities": [
																	{
																		"name": "Get Metadata5",
																		"type": "GetMetadata",
																		"dependsOn": [],
																		"policy": {
																			"timeout": "0.12:00:00",
																			"retry": 0,
																			"retryIntervalInSeconds": 30,
																			"secureOutput": false,
																			"secureInput": false
																		},
																		"userProperties": [],
																		"typeProperties": {
																			"dataset": {
																				"referenceName": "ADLS_CSV_Generic_DS",
																				"type": "DatasetReference",
																				"parameters": {
																					"Directory": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				}
																			},
																			"fieldList": [
																				"childItems"
																			],
																			"storeSettings": {
																				"type": "AzureBlobFSReadSettings",
																				"recursive": true,
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			}
																		}
																	},
																	{
																		"name": "Filter9",
																		"type": "Filter",
																		"dependsOn": [
																			{
																				"activity": "Get Metadata5",
																				"dependencyConditions": [
																					"Succeeded"
																				]
																			}
																		],
																		"userProperties": [],
																		"typeProperties": {
																			"items": {
																				"value": "@activity('Get Metadata3').output.childItems",
																				"type": "Expression"
																			},
																			"condition": {
																				"value": "@equals( item().name,'Folder' )",
																				"type": "Expression"
																			}
																		}
																	},
																	{
																		"name": "Filter10",
																		"type": "Filter",
																		"dependsOn": [
																			{
																				"activity": "Get Metadata5",
																				"dependencyConditions": [
																					"Succeeded"
																				]
																			}
																		],
																		"userProperties": [],
																		"typeProperties": {
																			"items": {
																				"value": "@activity('Get Metadata3').output.childItems",
																				"type": "Expression"
																			},
																			"condition": {
																				"value": "@equals( item().name,'File' )",
																				"type": "Expression"
																			}
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Filter2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azuresqldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_pr_databasename": "tamil11021991db",
								"ls_pr_username": "tamil",
								"ls_pr_password": "MayFlower@2024"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "insert into folder_filecount(foldername,filecount) select '@{activity('Get Metadata1').output.itemName}',Output.FilteredItemsCount)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T09:57:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_Blob')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incrimental_CopyData_to_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"description": "Get the max_modifieddate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select top 1 max_ModifiedDate from inc_load where tablename='SalesLT.Customer' order by 1 desc",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_table",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_schemaname": "salesLT",
									"ds_pr_tablename": "customer"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from salesLT.Customer where ModifiedDate > '@{activity('Lookup').output.firstRow.max_ModifiedDate}'\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_table",
								"type": "DatasetReference",
								"parameters": {
									"ds_pr_schemaname": "salesLT",
									"ds_pr_tablename": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_delimitedtext",
								"type": "DatasetReference",
								"parameters": {
									"folderpath": "landing/sample",
									"filename": "Customer_historic"
								}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azuresqldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_pr_databasename": "tamil11021991db",
								"ls_pr_username": "tamil",
								"ls_pr_password": "MayFlower@2024"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "insert into inc_load(tablename,max_ModifiedDate,run_id) \nselect 'SalesLT.Customer',(select max(ModifiedDate) from SalesLT.Customer ),'@{pipeline().RunId}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T10:11:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_delimitedtext')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Address_SQLDB_ADLS_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_Address_SQLDB_ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "SalesLT",
									"TableName": "Address"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "Address"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T08:03:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Address_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Address",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as cnt from salesLT.Address",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Address"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Condition check on Count",
						"description": "check for the count of records greater than 10",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "cnt",
								"value": "@{activity('Lookup Address').output.firstRow.cnt}"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup Address').output.firstRow.cnt,10)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Address",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'salesLT'}.@{'Address'}"
										},
										{
											"name": "Destination",
											"value": "landing/@{'Address'}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "Address"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_JSON_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Address"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T10:55:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_JSON_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_JOIN_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " Customer_JOIN_Address table",
				"activities": [
					{
						"name": "Ingestion_Customer_JOIN_Address_ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top 10 * from  [SalesLT].[CustomerAddress] as CA\ninner join [SalesLT].[Customer] as C on c.customerID=ca.customerID\ninner join [SalesLT].[Address] as A on a.addressID=ca.addressID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AddressID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AddressID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AddressType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressType",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "StateProvince",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StateProvince",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CountryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryRegion",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Test"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "output"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T08:22:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_SQLDB_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_Customer_SQLDB_ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "SalesLT",
									"TableName": "Customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "Customer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T07:58:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Product",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as cnt from salesLT.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Product"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Condition check on ProductCount",
						"description": "check for the count of records greater than 10",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "Product_Cnt",
								"value": "@{activity('Lookup Product').output.firstRow.cnt}"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup Product').output.firstRow.cnt,10)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Product",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'salesLT'}.@{'Product'}"
										},
										{
											"name": "Destination",
											"value": "landing/@{'Product'}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "Product"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_JSON_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Product"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Address",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition check on ProductCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as cnt from salesLT.Address",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": "Address"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Condition check on AddressCount",
						"description": "check for the count of records greater than 100",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "Address_cnt",
								"value": "@{activity('Lookup Address').output.firstRow.cnt}"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup Address').output.firstRow.cnt,100)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait2",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Address",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'salesLT'}.@{'Address'}"
										},
										{
											"name": "Destination",
											"value": "landing/@{'Address'}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "Address"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_JSON_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Address"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T12:30:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_JSON_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Insert_log_blob_on_create')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Makes a log entry in log_blob_delete",
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azuresqldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_pr_databasename": {
									"value": "@pipeline().parameters.PR_Databasename",
									"type": "Expression"
								},
								"ls_pr_username": "tamil",
								"ls_pr_password": "MayFlower@2024"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "filename",
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.PR_filename",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "deleted_time",
											"type": "Datetime",
											"value": {
												"value": "@pipeline().parameters.PR_Deletetime",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": {
										"value": "insert into log_blob_deleted values ( @filename,@deleted_time)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PR_filename": {
						"type": "string"
					},
					"PR_Deletetime": {
						"type": "string"
					},
					"PR_Databasename": {
						"type": "string",
						"defaultValue": "tamil11021991db"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T14:00:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Insert_log_blob_on_delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Makes a log entry in log_blob_delete",
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azuresqldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_pr_databasename": {
									"value": "@pipeline().parameters.PR_Databasename",
									"type": "Expression"
								},
								"ls_pr_username": "tamil",
								"ls_pr_password": "MayFlower@2024"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "filename",
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.PR_filename",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "deleted_time",
											"type": "Datetime",
											"value": {
												"value": "@pipeline().parameters.PR_Deletetime",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": {
										"value": "insert into log_blob_deleted values ( @filename,@deleted_time)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PR_filename": {
						"type": "string"
					},
					"PR_Deletetime": {
						"type": "string"
					},
					"PR_Databasename": {
						"type": "string",
						"defaultValue": "tamil11021991db"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T14:12:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterPipeline_Invoking3Pipes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline for CustomerCopy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table1",
									"type": "Expression"
								},
								"Directory": {
									"value": "@pipeline().parameters.Table1",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table1,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline for Addresscopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline for CustomerCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table2",
									"type": "Expression"
								},
								"Directory": {
									"value": "@pipeline().parameters.Table2",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table2,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline for CustomerAddressCopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline for Addresscopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table3",
									"type": "Expression"
								},
								"Directory": {
									"value": "@pipeline().parameters.Table3",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table3,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table1": {
						"type": "string",
						"defaultValue": "Customer"
					},
					"Table2": {
						"type": "string",
						"defaultValue": "Product"
					},
					"Table3": {
						"type": "string",
						"defaultValue": "CustomerAddress"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-05T15:57:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Foreach_Example_Table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterPipeline_Invoking3Pipes_DatetimeStamp_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline for CustomerCopy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table1",
									"type": "Expression"
								},
								"Directory": {
									"value": "@concat(pipeline().parameters.Table1,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table1,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline for Addresscopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline for CustomerCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table2",
									"type": "Expression"
								},
								"Directory": {
									"value": "@concat(pipeline().parameters.Table2,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table2,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline for CustomerAddressCopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline for Addresscopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Foreach_Example_Table_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SchemaName": "salesLT",
								"TableName": {
									"value": "@pipeline().parameters.Table3",
									"type": "Expression"
								},
								"Directory": {
									"value": "@concat(pipeline().parameters.Table3,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
									"type": "Expression"
								},
								"FileName": {
									"value": "@concat(pipeline().parameters.Table3,'_',\nreplace(formatDateTime(utcNow(),'dd-MM-yyyy-hh-mm-ss'),'-',''),\n'.csv')\n\n",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table1": {
						"type": "string",
						"defaultValue": "Customer"
					},
					"Table2": {
						"type": "string",
						"defaultValue": "Product"
					},
					"Table3": {
						"type": "string",
						"defaultValue": "CustomerAddress"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-05T15:57:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Foreach_Example_Table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_1_GetMetadataActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_CSV_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@if( equals(empty(variables('Path')),true),first(variables('Directory')) ,variables('Path') )",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition Check Type",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals( item().type ,'Folder')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set variable FileName",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set variable FilePath",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "FileName",
														"value": "@{item().name}"
													}
												],
												"typeProperties": {
													"variableName": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Get Metadata L1",
												"type": "GetMetadata",
												"dependsOn": [
													{
														"activity": "Set variable FileName",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ADLS_CSV_Generic_Dest_DS",
														"type": "DatasetReference",
														"parameters": {
															"Directory": {
																"value": "@variables('Path')",
																"type": "Expression"
															},
															"FileName": {
																"value": "@variables('FileName')",
																"type": "Expression"
															}
														}
													},
													"fieldList": [
														"itemName",
														"itemType",
														"size",
														"exists",
														"childItems",
														"columnCount",
														"structure"
													],
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												}
											},
											{
												"name": "Set variable FilePath",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Path",
														"value": "@{join(variables('Directory'),'/')}"
													}
												],
												"typeProperties": {
													"variableName": "Path",
													"value": {
														"value": "@join(variables('Directory'),'/')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Append variable Directory",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Directory",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable Path",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Append variable Directory",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Path",
														"value": "@{join(variables('Directory'),'/')}"
													}
												],
												"typeProperties": {
													"variableName": "Path",
													"value": {
														"value": "@join(variables('Directory'),'/')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Directory": {
						"type": "Array",
						"defaultValue": [
							"Customer"
						]
					},
					"FileName": {
						"type": "String"
					},
					"Path": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-05T10:16:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_Dest_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_BottomLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will copy objects from one group. The objects belonging to this group will be copied parallelly.",
				"activities": [
					{
						"name": "ListObjectsFromOneGroup",
						"description": "List objects from one group and iterate each of them to downstream activities",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ObjectsPerGroupToCopy",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RouteJobsBasedOnLoadingBehavior",
									"description": "Check the loading behavior for each object if it requires full load or incremental load. If it is Default or FullLoad case, do full load. If it is DeltaLoad case, do incremental load.",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@json(item().DataLoadingBehaviorSettings).dataLoadingBehavior",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "FullLoad",
												"activities": [
													{
														"name": "FullLoadOneObject",
														"description": "Take a full snapshot on this object and copy it to the destination",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": "Source",
																"value": "@{json(item().SourceObjectSettings).schema}.@{json(item().SourceObjectSettings).table}"
															},
															{
																"name": "Destination",
																"value": "@{json(item().SinkObjectSettings).fileSystem}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
															}
														],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "@json(item().CopySourceSettings).sqlReaderQuery",
																	"type": "Expression"
																},
																"partitionOption": {
																	"value": "@json(item().CopySourceSettings).partitionOption",
																	"type": "Expression"
																},
																"partitionSettings": {
																	"partitionColumnName": {
																		"value": "@json(item().CopySourceSettings).partitionColumnName",
																		"type": "Expression"
																	},
																	"partitionUpperBound": {
																		"value": "@json(item().CopySourceSettings).partitionUpperBound",
																		"type": "Expression"
																	},
																	"partitionLowerBound": {
																		"value": "@json(item().CopySourceSettings).partitionLowerBound",
																		"type": "Expression"
																	},
																	"partitionNames": "@json(item().CopySourceSettings).partitionNames"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"validateDataConsistency": false,
															"logSettings": {
																"enableCopyActivityLog": true,
																"copyActivityLogSettings": {
																	"logLevel": "Warning",
																	"enableReliableLogging": false
																},
																"logLocationSettings": {
																	"linkedServiceName": {
																		"referenceName": "ls_dev_adls",
																		"type": "LinkedServiceReference"
																	},
																	"path": "landing/log"
																}
															},
															"translator": {
																"value": "@json(item().CopyActivitySettings).translator",
																"type": "Expression"
															}
														},
														"inputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_oem_SourceDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_schema": {
																		"value": "@json(item().SourceObjectSettings).schema",
																		"type": "Expression"
																	},
																	"cw_table": {
																		"value": "@json(item().SourceObjectSettings).table",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_oem_DestinationDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_fileName": {
																		"value": "@json(item().SinkObjectSettings).fileName",
																		"type": "Expression"
																	},
																	"cw_folderPath": {
																		"value": "@json(item().SinkObjectSettings).folderPath",
																		"type": "Expression"
																	},
																	"cw_fileSystem": {
																		"value": "@json(item().SinkObjectSettings).fileSystem",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "DeltaLoad",
												"activities": [
													{
														"name": "GetMaxWatermarkValue",
														"description": "Query the source object to get the max value from watermark column",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "select max([@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}]) as CurrentMaxWaterMarkColumnValue from [@{json(item().SourceObjectSettings).schema}].[@{json(item().SourceObjectSettings).table}]",
																	"type": "Expression"
																},
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "MetadataDrivenCopyTask_oem_SourceDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_schema": {
																		"value": "@json(item().SourceObjectSettings).schema",
																		"type": "Expression"
																	},
																	"cw_table": {
																		"value": "@json(item().SourceObjectSettings).table",
																		"type": "Expression"
																	}
																}
															}
														}
													},
													{
														"name": "DeltaLoadOneObject",
														"description": "Copy the changed data only from last time via comparing the value in watermark column to identify changes.",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "GetMaxWatermarkValue",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": "Source",
																"value": "@{json(item().SourceObjectSettings).schema}.@{json(item().SourceObjectSettings).table}"
															},
															{
																"name": "Destination",
																"value": "@{json(item().SinkObjectSettings).fileSystem}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
															}
														],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "select * from [@{json(item().SourceObjectSettings).schema}].[@{json(item().SourceObjectSettings).table}] \n    where [@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}] > @{if(contains(json(item().DataLoadingBehaviorSettings).watermarkColumnType, 'Int'),\n    json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue, \n    concat('''', json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue, ''''))}\n    and [@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}] <= @{if(contains(json(item().DataLoadingBehaviorSettings).watermarkColumnType, 'Int'),\n    activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue, \n    concat('''', activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue, ''''))}",
																	"type": "Expression"
																},
																"partitionOption": {
																	"value": "@json(item().CopySourceSettings).partitionOption",
																	"type": "Expression"
																},
																"partitionSettings": {
																	"partitionColumnName": {
																		"value": "@json(item().CopySourceSettings).partitionColumnName",
																		"type": "Expression"
																	},
																	"partitionUpperBound": {
																		"value": "@json(item().CopySourceSettings).partitionUpperBound",
																		"type": "Expression"
																	},
																	"partitionLowerBound": {
																		"value": "@json(item().CopySourceSettings).partitionLowerBound",
																		"type": "Expression"
																	},
																	"partitionNames": "@json(item().CopySourceSettings).partitionNames"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"validateDataConsistency": false,
															"logSettings": {
																"enableCopyActivityLog": true,
																"copyActivityLogSettings": {
																	"logLevel": "Warning",
																	"enableReliableLogging": false
																},
																"logLocationSettings": {
																	"linkedServiceName": {
																		"referenceName": "ls_dev_adls",
																		"type": "LinkedServiceReference"
																	},
																	"path": "landing/log"
																}
															},
															"translator": {
																"value": "@json(item().CopyActivitySettings).translator",
																"type": "Expression"
															}
														},
														"inputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_oem_SourceDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_schema": {
																		"value": "@json(item().SourceObjectSettings).schema",
																		"type": "Expression"
																	},
																	"cw_table": {
																		"value": "@json(item().SourceObjectSettings).table",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_oem_DestinationDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_fileName": {
																		"value": "@{json(item().SinkObjectSettings).fileName}-@{json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue}-@{activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue}",
																		"type": "Expression"
																	},
																	"cw_folderPath": {
																		"value": "@json(item().SinkObjectSettings).folderPath",
																		"type": "Expression"
																	},
																	"cw_fileSystem": {
																		"value": "@json(item().SinkObjectSettings).fileSystem",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "UpdateWatermarkColumnValue",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "DeltaLoadOneObject",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[dbo].[UpdateWatermarkColumnValue_oem]",
															"storedProcedureParameters": {
																"Id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"watermarkColumnStartValue": {
																	"value": {
																		"value": "@activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS_Azure_SQLDB",
															"type": "LinkedServiceReference"
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "DefaultFullLoadOneObject",
												"description": "Take a full snapshot on this object and copy it to the destination",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{json(item().SourceObjectSettings).schema}.@{json(item().SourceObjectSettings).table}"
													},
													{
														"name": "Destination",
														"value": "@{json(item().SinkObjectSettings).fileSystem}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@json(item().CopySourceSettings).sqlReaderQuery",
															"type": "Expression"
														},
														"partitionOption": {
															"value": "@json(item().CopySourceSettings).partitionOption",
															"type": "Expression"
														},
														"partitionSettings": {
															"partitionColumnName": {
																"value": "@json(item().CopySourceSettings).partitionColumnName",
																"type": "Expression"
															},
															"partitionUpperBound": {
																"value": "@json(item().CopySourceSettings).partitionUpperBound",
																"type": "Expression"
															},
															"partitionLowerBound": {
																"value": "@json(item().CopySourceSettings).partitionLowerBound",
																"type": "Expression"
															},
															"partitionNames": "@json(item().CopySourceSettings).partitionNames"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "ls_dev_adls",
																"type": "LinkedServiceReference"
															},
															"path": "landing/log"
														}
													},
													"translator": {
														"value": "@json(item().CopyActivitySettings).translator",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_oem_SourceDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_schema": {
																"value": "@json(item().SourceObjectSettings).schema",
																"type": "Expression"
															},
															"cw_table": {
																"value": "@json(item().SourceObjectSettings).table",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_oem_DestinationDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_fileName": {
																"value": "@json(item().SinkObjectSettings).fileName",
																"type": "Expression"
															},
															"cw_folderPath": {
																"value": "@json(item().SinkObjectSettings).folderPath",
																"type": "Expression"
															},
															"cw_fileSystem": {
																"value": "@json(item().SinkObjectSettings).fileSystem",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ObjectsPerGroupToCopy": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T09:03:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MetadataDrivenCopyTask_oem_SourceDS')]",
				"[concat(variables('factoryId'), '/datasets/MetadataDrivenCopyTask_oem_DestinationDS')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQLDB')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_MiddleLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will copy one batch of objects. The objects belonging to this batch will be copied parallelly.",
				"activities": [
					{
						"name": "DivideOneBatchIntoMultipleGroups",
						"description": "Divide objects from single batch into multiple sub parallel groups to avoid reaching the output limit of lookup activity.",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, add(div(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity),\n                    if(equals(mod(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity), 0), 0, 1)))",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "GetObjectsPerGroupToCopy",
									"description": "Get objects (tables etc.) from control table required to be copied in this group. The order of objects to be copied following the TaskId in control table (ORDER BY [TaskId] DESC).",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "WITH OrderedControlTable AS (\n                             SELECT *, ROW_NUMBER() OVER (ORDER BY [TaskId], [Id] DESC) AS RowNumber\n                             FROM @{pipeline().parameters.MainControlTableName}\n                             where TopLevelPipelineName = '@{pipeline().parameters.TopLevelPipelineName}'\n                             and TriggerName like '%@{pipeline().parameters.TriggerName}%' and CopyEnabled = 1)\n                             SELECT * FROM OrderedControlTable WHERE RowNumber BETWEEN @{add(mul(int(item()),pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity),\n                             add(mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.CurrentSequentialNumberOfBatch), 1))}\n                             AND @{min(add(mul(int(item()), pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity), add(mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, pipeline().parameters.CurrentSequentialNumberOfBatch),\n                             pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity)),\n                            mul(pipeline().parameters.SumOfObjectsToCopyForCurrentBatch, add(pipeline().parameters.CurrentSequentialNumberOfBatch,1)), pipeline().parameters.SumOfObjectsToCopy)}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "MetadataDrivenCopyTask_oem_ControlDS",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "CopyObjectsInOneGroup",
									"description": "Execute another pipeline to copy objects from one group. The objects belonging to this group will be copied parallelly.",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetObjectsPerGroupToCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MetadataDrivenCopyTask_oem_BottomLevel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ObjectsPerGroupToCopy": {
												"value": "@activity('GetObjectsPerGroupToCopy').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"MaxNumberOfObjectsReturnedFromLookupActivity": {
						"type": "Int"
					},
					"TopLevelPipelineName": {
						"type": "String"
					},
					"TriggerName": {
						"type": "String"
					},
					"CurrentSequentialNumberOfBatch": {
						"type": "Int"
					},
					"SumOfObjectsToCopy": {
						"type": "Int"
					},
					"SumOfObjectsToCopyForCurrentBatch": {
						"type": "Int"
					},
					"MainControlTableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T09:03:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MetadataDrivenCopyTask_oem_ControlDS')]",
				"[concat(variables('factoryId'), '/pipelines/MetadataDrivenCopyTask_oem_BottomLevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_TopLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will count the total number of objects (tables etc.) required to be copied in this run, come up with the number of sequential batches based on the max allowed concurrent copy task, and then execute another pipeline to copy different batches sequentially.",
				"activities": [
					{
						"name": "GetSumOfObjectsToCopy",
						"description": "Count the total number of objects (tables etc.) required to be copied in this run.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT count(*) as count FROM @{pipeline().parameters.MainControlTableName} where TopLevelPipelineName='@{pipeline().Pipeline}' and TriggerName like '%@{pipeline().TriggerName}%' and CopyEnabled = 1",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "MetadataDrivenCopyTask_oem_ControlDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyBatchesOfObjectsSequentially",
						"description": "Come up with the number of sequential batches based on the max allowed concurrent copy tasks, and then execute another pipeline to copy different batches sequentially.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSumOfObjectsToCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, add(div(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks),\n                    if(equals(mod(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks), 0), 0, 1)))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyObjectsInOneBatch",
									"description": "Execute another pipeline to copy one batch of objects. The objects belonging to this batch will be copied parallelly.",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MetadataDrivenCopyTask_oem_MiddleLevel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"MaxNumberOfObjectsReturnedFromLookupActivity": {
												"value": "@pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity",
												"type": "Expression"
											},
											"TopLevelPipelineName": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											},
											"TriggerName": {
												"value": "@{pipeline().TriggerName}",
												"type": "Expression"
											},
											"CurrentSequentialNumberOfBatch": {
												"value": "@item()",
												"type": "Expression"
											},
											"SumOfObjectsToCopy": {
												"value": "@activity('GetSumOfObjectsToCopy').output.firstRow.count",
												"type": "Expression"
											},
											"SumOfObjectsToCopyForCurrentBatch": {
												"value": "@min(pipeline().parameters.MaxNumberOfConcurrentTasks, activity('GetSumOfObjectsToCopy').output.firstRow.count)",
												"type": "Expression"
											},
											"MainControlTableName": {
												"value": "@pipeline().parameters.MainControlTableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"MaxNumberOfObjectsReturnedFromLookupActivity": {
						"type": "Int",
						"defaultValue": 5000
					},
					"MaxNumberOfConcurrentTasks": {
						"type": "Int",
						"defaultValue": 20
					},
					"MainControlTableName": {
						"type": "String",
						"defaultValue": "dbo.MainControlTable_oem"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [
					"MetadataDrivenSolution"
				],
				"lastPublishTime": "2024-06-04T09:03:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MetadataDrivenCopyTask_oem_ControlDS')]",
				"[concat(variables('factoryId'), '/pipelines/MetadataDrivenCopyTask_oem_MiddleLevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Set_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Append variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Files')",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(int(item()),3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable",
						"description": "set variable [files]",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": [
								"1",
								"2",
								"3",
								"4",
								"5"
							]
						}
					},
					{
						"name": "Append variable",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": "6"
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Filter').output.value,6)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@string(activity('Filter').output.value)",
											"type": "Expression"
										},
										"errorCode": "1"
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Files": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-29T11:32:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Switch-Induvidual_Folder_on_Timestamp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Use switch to perform copy activity and create a folder structure based on timestamp",
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Customer",
									"activities": [
										{
											"name": "Execute Pipeline for Customer",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "Foreach_Example_Table_ADLS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"SchemaName": "salesLT",
													"TableName": {
														"value": "@pipeline().parameters.TableName",
														"type": "Expression"
													},
													"Directory": {
														"value": "@concat(pipeline().parameters.TableName,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
														"type": "Expression"
													},
													"FileName": {
														"value": "@concat(pipeline().parameters.TableName,replace(formatDateTime(utcNow(),'s'),'-',''),'.csv')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Product",
									"activities": [
										{
											"name": "Execute Pipeline for Product",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "Foreach_Example_Table_ADLS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"SchemaName": "salesLT",
													"TableName": {
														"value": "@pipeline().parameters.TableName",
														"type": "Expression"
													},
													"Directory": {
														"value": "@concat(pipeline().parameters.TableName,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
														"type": "Expression"
													},
													"FileName": {
														"value": "@concat(pipeline().parameters.TableName,replace(formatDateTime(utcNow(),'s'),'-',''),'.csv')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "CustomerAddress",
									"activities": [
										{
											"name": "Execute Pipeline for CustomerAddress",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "Foreach_Example_Table_ADLS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"SchemaName": "salesLT",
													"TableName": {
														"value": "@pipeline().parameters.TableName",
														"type": "Expression"
													},
													"Directory": {
														"value": "@concat(pipeline().parameters.TableName,'/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/',formatDateTime(utcNow(),'hh'),'/',formatDateTime(utcNow(),'mm'),'/',formatDateTime(utcNow(),'ss'))\n",
														"type": "Expression"
													},
													"FileName": {
														"value": "@concat(pipeline().parameters.TableName,replace(formatDateTime(utcNow(),'s'),'-',''),'.csv')",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [
										{
											"name": "Default",
											"value": "@{pipeline().parameters.TableName}"
										}
									],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T07:05:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Foreach_Example_Table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Threshold_count_check_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Check the thresold value from the file and load the table",
				"activities": [
					{
						"name": "Lookup Thresold File",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_Thresold_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookup count customer",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as cnt from salesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDB_Generic_DS",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "salesLT",
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "If Condition check FileThresold_greater_CustomerTable",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Thresold File",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Lookup count customer",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater( activity('Lookup count customer').output.firstRow.cnt,int(activity('Lookup Thresold File').output.firstRow.Prop_0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline Table_to_JSON",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy_Table_to_JSON",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pr_tablename": {
												"value": "@pipeline().parameters.TableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "Customer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T06:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Thresold_File')]",
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_Table_to_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Web_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://vpic.nhtsa.dot.gov/api/vehicles/getallmanufacturers?format=json"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Json_Results",
							"value": {
								"value": "@activity('Web1').output.Results",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Json_Results')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "json_value",
										"value": {
											"value": "@string(item())",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "declare @json varchar(max)\r\nset @json=N'@{variables('Json_Results')}'\r\nselect Mfr_ID,Mfr_CommonName,Mfr_Name,Country,IsPrimary,VehicleTypeName \r\nFROM OPENJSON(@json) WITH (\r\n\tCountry NVARCHAR(50) '$.Country',\r\n\tMfr_CommonName NVARCHAR(50) '$.Mfr_CommonName',\r\n\tMfr_ID INT '$.Mfr_ID',\r\n\tMfr_Name NVARCHAR(50) '$.Mfr_Name',\r\n\tVehicleTypes NVARCHAR(max) '$.VehicleTypes' as JSON\r\n)\r\nOUTER APPLY OPENJSON(VehicleTypes) WITH \r\n\t(IsPrimary NVARCHAR(50) '$.IsPrimary',\r\n\tVehicleTypeName NVARCHAR(250) '$.Name');",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Mfr_ID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CustomerID"
													}
												},
												{
													"source": {
														"name": "Mfr_CommonName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "NameStyle"
													}
												},
												{
													"source": {
														"name": "Mfr_Name",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Title"
													}
												},
												{
													"source": {
														"name": "Country",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "FirstName"
													}
												},
												{
													"source": {
														"name": "IsPrimary",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MiddleName"
													}
												},
												{
													"source": {
														"name": "VehicleTypeName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LastName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_table",
											"type": "DatasetReference",
											"parameters": {
												"ds_pr_schemaname": "salesLT",
												"ds_pr_tablename": "customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_table",
											"type": "DatasetReference",
											"parameters": {
												"ds_pr_schemaname": "dbo",
												"ds_pr_tablename": "test"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Json_Results": {
						"type": "Array"
					},
					"json_value": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-29T13:48:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Without_ForEach_CustAddress_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition check CustomerAddress Table",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(variables('Table_List'),'CustomerAddress')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data CustomerAddress",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "CustomerAddress"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_CSV_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "CustomerAddress"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Table_List": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T13:01:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Without_Foreach_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable",
						"description": "Set variable ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_List",
							"value": {
								"value": "@createArray('Customer','CustomerAddress')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "if condition check Customer Table",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [
							{
								"name": "CustomerTable",
								"value": "@{contains(variables('Table_List'),'Customer')}"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@contains(variables('Table_List'),'Customer')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy customer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'salesLT'}.@{'Customer'}"
										},
										{
											"name": "Destination",
											"value": "landing/@{'customer'}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CustomerID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CustomerID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NameStyle",
														"type": "Boolean",
														"physicalType": "bit"
													},
													"sink": {
														"name": "NameStyle",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Title",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Title",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "MiddleName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MiddleName",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "LastName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LastName",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Suffix",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Suffix",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "CompanyName",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CompanyName",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "SalesPerson",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SalesPerson",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Phone",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Phone",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "PasswordHash",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PasswordHash",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "PasswordSalt",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PasswordSalt",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "rowguid",
														"type": "Guid",
														"physicalType": "uniqueidentifier"
													},
													"sink": {
														"name": "rowguid",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "Customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_CSV_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "customer"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "If Condition check CustomerAddress Table",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [
							{
								"name": "Cust_Address",
								"value": "@{contains(variables('Table_List'),'CustomerAddress')}"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@contains(variables('Table_List'),'CustomerAddress' )",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy CustomerAddress",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'salesLT'}.@{'CustomerAddress'}"
										},
										{
											"name": "Destination",
											"value": "landing/@{'CustomerAddress'}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CustomerID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CustomerID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AddressID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "AddressID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AddressType",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "AddressType",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "rowguid",
														"type": "Guid",
														"physicalType": "uniqueidentifier"
													},
													"sink": {
														"name": "rowguid",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDB_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "salesLT",
												"TableName": "CustomerAddress"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_CSV_Generic_DS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "CustomerAddress"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Table_List": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T13:29:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDB_Generic_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_CSV_Generic_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_customerAddress_Detail",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesLTCustomer": {
										"TableName": {
											"value": "@pipeline().parameters.Tbl_Customer",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										}
									},
									"SalesLTAddress": {
										"SchemaName": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.Tbl_Address",
											"type": "Expression"
										}
									},
									"SalesLTCustomerAddress": {
										"SchemaName": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.Tbl_CustomerAddress",
											"type": "Expression"
										}
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Tbl_Customer": {
						"type": "string",
						"defaultValue": "Customer"
					},
					"Tbl_Address": {
						"type": "string",
						"defaultValue": "Address"
					},
					"Tbl_CustomerAddress": {
						"type": "string",
						"defaultValue": "CustomerAddress"
					},
					"Schema": {
						"type": "string",
						"defaultValue": "SalesLT"
					},
					"Tbl_Destination": {
						"type": "string",
						"defaultValue": "CustomerAddressDetail"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-31T14:47:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_customerAddress_Detail')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"description": "itertate 5 times",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('counter'),5)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set counter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "counter",
										"value": {
											"value": "@variables('temp')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "temp",
										"value": {
											"value": "@add(variables('counter'),1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Fail1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Child_param_A": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat( 'Today Date is ',formatDateTime(utcNow()),\n'DayofMonth :',string(dayOfMonth(utcNow())),\n'Dayofweek :',string(dayOfWeek(utcNow())),\n'DayofYear :',string(dayOfYear(utcNow())),\n'startofDay :', string(startOfDay(utcNow())),\n'startofHour :', string(startOfHour(utcNow())),\n'startofMonth :', string(startOfMonth(utcNow())))",
								"type": "Expression"
							},
							"errorCode": "1"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Customer",
							"Address"
						]
					}
				},
				"variables": {
					"counter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"temp": {
						"type": "Integer",
						"defaultValue": 0
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Child_A",
							"value": {
								"value": "@pipeline().parameters.Child_param_A",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Child_param_A": {
						"type": "array"
					}
				},
				"variables": {
					"Child_A": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_CSV_Generic_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_CSV_Generic_Dest_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_CSV_PipeDelimited_Generic_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_JSON_Generic_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CustomerID": {
							"type": "integer"
						},
						"Title": {
							"type": "string"
						},
						"FirstName": {
							"type": "string"
						},
						"MiddleName": {
							"type": "string"
						},
						"LastName": {
							"type": "string"
						},
						"Suffix": {
							"type": "string"
						},
						"CompanyName": {
							"type": "string"
						},
						"SalesPerson": {
							"type": "string"
						},
						"EmailAddress": {
							"type": "string"
						},
						"Phone": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDB_Generic_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLDB_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "Customer"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "SalesLT"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB_Address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB_CustomerAddress')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressType",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB_CustomerAddressDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerAddressDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"Schema": {
						"type": "String"
					},
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Thresold_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Threshold-TwcFV4QAZU-FUlXd8kxvf-kvhXfDKHCl.txt",
						"folderPath": "sample",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": null
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQLDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "MainControlTable_oem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					},
					"cw_folderPath": {
						"type": "Object"
					},
					"cw_fileSystem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().cw_folderPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().cw_fileSystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oem_SourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oem_20240604"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Person')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Person.txt",
						"folderPath": "sample",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Person_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DateofBirth",
						"type": "date"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_delimitedtext')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderpath": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().folderpath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dest_delimitedtext')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dest_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().dest_path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dest_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_pr_folder": {
						"type": "string"
					},
					"ds_pr_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_pr_filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_pr_folder",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_delimitedtext')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_path": {
						"type": "String"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().source_path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dev_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_pr_folderpath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().ds_pr_folderpath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dev_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresqldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_pr_databasename": "tamil11021991db",
						"ls_pr_username": "tamil",
						"ls_pr_password": "MayFlower@2024"
					}
				},
				"parameters": {
					"ds_pr_schemaname": {
						"type": "string",
						"defaultValue": "salesLT"
					},
					"ds_pr_tablename": {
						"type": "string",
						"defaultValue": "customer"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().ds_pr_schemaname",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().ds_pr_tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Azure_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Azure_SQLDB_properties_typeProperties_server')]",
					"database": "[parameters('LS_Azure_SQLDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"hostNameInCertificate": "",
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Azure_SQLDB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Azure_SQLDB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuresqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ls_pr_databasename": {
						"type": "string",
						"defaultValue": "tamil11021991db"
					},
					"ls_pr_username": {
						"type": "string",
						"defaultValue": "tamil"
					},
					"ls_pr_password": {
						"type": "string",
						"defaultValue": "MayFlower@2024"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azuresqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_azuresqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"hostNameInCertificate": "",
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azuresqldb_properties_typeProperties_userName')]",
					"password": "@{linkedService().ls_pr_password}"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dev_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "thamizhdevadlssa",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_dev_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_dev_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_Copy_file')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy file from source to destination patj",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy_file",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourcePath": "[parameters('TR_Copy_file_properties_Copy_file_parameters_SourcePath')]",
							"DestinationPath": "[parameters('TR_Copy_file_properties_Copy_file_parameters_DestinationPath')]",
							"Source_filename": "[parameters('TR_Copy_file_properties_Copy_file_parameters_Source_filename')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-05-27T12:20:00",
						"endTime": "2024-05-29T06:37:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								12
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_copy_file_in_folder')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy_file_in_folder",
							"type": "PipelineReference"
						},
						"parameters": {
							"PR_sourcepath": "[parameters('TR_copy_file_in_folder_properties_Copy_file_in_folder_parameters_PR_sourcepath')]",
							"PR_destinationpath": "[parameters('TR_copy_file_in_folder_properties_Copy_file_in_folder_parameters_PR_destinationpath')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-05-28T06:42:00",
						"endTime": "2024-05-29T06:42:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								6
							],
							"hours": [
								14
							],
							"weekDays": [
								"Tuesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy_file_in_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_on_blob_create')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "trigger on blob creation in output folder",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Insert_log_blob_on_create",
							"type": "PipelineReference"
						},
						"parameters": {
							"PR_filename": "[parameters('TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_filename')]",
							"PR_Deletetime": "[parameters('TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_Deletetime')]",
							"PR_Databasename": "[parameters('TR_on_blob_create_properties_Insert_log_blob_on_create_parameters_PR_Databasename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/output",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_on_blob_create_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Insert_log_blob_on_create')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_on_blob_delete')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Insert_log_blob_on_delete",
							"type": "PipelineReference"
						},
						"parameters": {
							"PR_filename": "[parameters('TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_filename')]",
							"PR_Deletetime": "[parameters('TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_Deletetime')]",
							"PR_Databasename": "[parameters('TR_on_blob_delete_properties_Insert_log_blob_on_delete_parameters_PR_Databasename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/output",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_on_blob_delete_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Insert_log_blob_on_delete')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Person')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Person",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Person_DS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "assert1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Name as string,",
						"          DOB as string,",
						"          Age as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 assert(expectTrue(isDate(DOB,'dd-MMM-yyyy'), false, 'Valid_DOB', null, 'validate the DOB column')) ~> assert1",
						"assert1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          DateofBirth as date,",
						"          Age as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Person')]",
				"[concat(variables('factoryId'), '/datasets/Person_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_customerAddress_Detail')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSQLDB_Customer",
								"type": "DatasetReference"
							},
							"name": "SalesLTCustomer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlDB_Address",
								"type": "DatasetReference"
							},
							"name": "SalesLTAddress"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlDB_CustomerAddress",
								"type": "DatasetReference"
							},
							"name": "SalesLTCustomerAddress"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDB_CustomerAddressDetail",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "join2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesLTCustomer",
						"source(output(",
						"          AddressID as integer,",
						"          AddressLine1 as string,",
						"          AddressLine2 as string,",
						"          City as string,",
						"          StateProvince as string,",
						"          CountryRegion as string,",
						"          PostalCode as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesLTAddress",
						"source(output(",
						"          CustomerID as integer,",
						"          AddressID as integer,",
						"          AddressType as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesLTCustomerAddress",
						"SalesLTCustomerAddress, SalesLTCustomer join(SalesLTCustomerAddress@CustomerID == SalesLTCustomer@CustomerID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1, SalesLTAddress join(SalesLTCustomerAddress@AddressID == SalesLTAddress@AddressID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID = SalesLTCustomer@CustomerID,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          AddressID = SalesLTAddress@AddressID,",
						"          AddressLine1,",
						"          AddressLine2,",
						"          City,",
						"          StateProvince,",
						"          CountryRegion,",
						"          PostalCode",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLDB_Customer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDB_Address')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDB_CustomerAddress')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDB_CustomerAddressDetail')]"
			]
		}
	]
}